.coverimage{
  height: var(--coverImageHeight);
  width: var(--coverImageWidth);
  margin-top: var(--navHeight);
  position: relative;
  overflow: hidden;
}
.slides{
  display: flex;
  transition: transform 0.5s ease-in-out;
}

.slides img{
  height: var(--coverImageHeight);
  width: var(--coverImageWidth);
  flex: 0 0 var(--coverImageWidth);
  object-fit: cover;
  object-position: 22% 50%;
  filter: grayscale(1);
  transition: filter 0.5s ease;
  display: block;
}
.slides img:hover{
  filter: grayscale(0);
}

.prev, .next{
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  font-size: 40px;
  color: white;
  cursor: pointer;
  padding: 10px 10px 14.5px 10px;
  background-color: rgba(0, 0, 0, 0.3);
  user-select: none;
}
.prev{
  left: 10px;
}
.next{
  right: 10px;
}
.prev:hover, .next:hover{
  background-color: rgba(0, 0, 0, 0.8);
}

.intro{
  width: var(--elWidth);
  margin: var(--eighthUnit) auto var(--eighthUnit) auto; 
  height: var(--introHeight);
  display: flex;
  position: relative;
}

#imgContainer{
  width: var(--imgContainerWidth);
  margin-right: var(--quarterUnit);
}

#imgContainer img{
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 50% 25%;
  display: block; /* for narrow screens */
}

#introContent{
  flex: 1;
  overflow: hidden;
  background: var(--containerBg);
  padding: var(--halfUnit);
  position: relative;
}

#introText{
  text-align: justify;
  line-height: 1.3;
  column-count: 2;
  column-gap: var(--thirdUnit);
}
#introText p:first-of-type::first-letter{
  font-size: 2.6rem;
  color: var(--color1);
  float: left;
  margin-right: 0.6rem;
  margin-top: 0.3rem;
}
#introText > p{
  font-size: 1rem;
}

#signature{
  width: var(--sigWidth);
  height: var(--sigHeight);
  position: absolute;
  top: calc(100% + 1rem);
  right: 0;
}

.introCloseText{
  position: absolute;
  top: -2rem;
  right: 1rem;
  height: var(--introHeight);
  display: flex;
  justify-content: center;
}

.introCloseText, .introCloseText *{
  color: var(--color2); 
  display: inline-block;
  transition: transform 0.5s ease;
  font-family: bahnschrift;
  font-size: 1.3rem;
}

.introCloseText.long{
  top: 1rem;
  right: calc(var(--quarterUnit) * -2);
  writing-mode: vertical-lr;
}
.introCloseText.long, .introCloseText.long *{
  font-size: calc(calc(var(--introHeight) - 2rem) / 22);
}
.introCloseText *:not(div){
  text-decoration: underline;
  text-decoration-thickness: 3px;
  text-underline-offset: 4px;
}

.introCloseText.short{
  display: none;
}
.introCloseText_shorter{
  display: none;
}

.introCloseText a:hover{
  transform: translateX(-1em);
}

.introCloseText:not(.shorter) a:nth-of-type(2):hover{
  transform: translateX(1em);
}

.introCloseText.long a:hover{
  transform: translateY(-1em);
}

.introCloseText.long a:nth-of-type(2):hover{
  transform: translateY(1em);
}

.section{
  display: grid;
  grid-template-columns: repeat(3,1fr);
  gap: var(--quarterUnit);
  width: fit-content;
  margin: 0 auto;
}
.section:not(:last-of-type){
  margin-bottom: var(--eighthUnit);
}

.siContainer{
  height: var(--sectionItemHeight);
  width: var(--sectionItemHeight);
  perspective: 800px;
}
.siContainer.flipping{
  z-index: 10;
}
.flipper{
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.6s ease; 
}
.sectionItem{
  padding: var(--sectionItemPadding);
  background: var(--containerBg);
  height: var(--sectionItemHeight);
  width: var(--sectionItemHeight);
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
}
.back{
  transform: rotateY(-180deg);
  text-align: right;
}
.back ul{
  list-style: none;
}
.front, .back{
  position: absolute;
  backface-visibility: hidden;
}
.front .contentWrapper{
  transition: opacity 0.1s ease;
  transition-delay: 0.15s; 
}
.flipper.flipped .front .contentWrapper{
  opacity: 0;
}
.flipper.flipped{
  transform: rotateY(-180deg);
}
.flipper:hover{
  transform: rotateY(-10deg);
}
.flipped:hover{
  transform: rotateY(-170deg);
}

.sectionItem.image{
  padding: 0 !important;
  transition: filter 0.5s ease;
  filter: grayscale(1);
}
.sectionItem.image:hover{
  filter: grayscale(0);
}
.sectionItem.image.evens{
  display: none;
}

.front .contentWrapper, .back .contentWrapper{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  margin: 0;
}
.front *, .back.edu *{
  font-size: 1.35rem;
  margin: 0;
}
.front h3{
  font-size: 2.2rem;
  margin-top: 0;
  text-decoration: underline;
  text-decoration-thickness: 3px;
  text-underline-offset: 4px;
  font-family: bahnschrift;
  color: var(--color1);
}
.moatti *{
  font-size: var(--moattiFontSize);
  color: var(--color1);
}
.front .contentWrapper .bold, .front .descDate, .contract{
  width: 100%;
  text-align: end;
}
.descDate{
  font-weight: bold;
}
.descDate{
  font-size: 1.8rem;
}
.back *{
  font-size: 1.2rem;
}
.back .contentWrapper div{
  width: 100%;
  margin-left: 0;
  list-style-position: outside;
}
.edu .contentWrapper > :nth-child(1){
  text-align: left;
}
.edu .contentWrapper > :nth-child(2){
  text-align: right;
}
.ita{
  margin-right: 0.2rem;
}
.edu .descDate{
  margin-bottom: calc(var(--eighthUnit) / 2);
}

#mainTools *{
  text-align: center;
  align-items: center;
}
#mainTools img{
  height: calc(calc(var(--sectionItemHeight) - var(--sectionItemPadding) * 2) - calc(2em + var(--eighthUnit)));
  width: calc(calc(var(--sectionItemHeight) - var(--sectionItemPadding) * 2) - calc(2em + var(--eighthUnit)));
}
#mainTools .contentWrapper{
  overflow: hidden;
}


@media (max-width: 1560px) or (max-aspect-ratio: 1/3){
    :root{
        --sectionItemPadding: var(--thirdUnit);
    }
}

@media (max-width: 1440px) or (max-aspect-ratio: 1/3){
    :root{
        --sectionItemPadding: var(--quarterUnit);
    }
}

@media (max-width: 1350px) and (min-width: 1250px){
    .front h3{
        font-size: 1.8rem;
    }
    .front *, .back.edu *{
        font-size: 1.1rem;
    }
}

@media (max-width: 1300px) or (max-aspect-ratio: 1/3){
    #introText{
        column-gap: var(--quarterUnit);
    }
}

@media (max-width: 1250px) or (max-aspect-ratio: 1/3){
    #introText{
        column-count: 1;
    }
    .section:not(#mainTools){
        grid-template-columns: repeat(2, 1fr);
    }
    #mainTools{
        --sectionItemHeight: calc((var(--elWidth) - var(--halfUnit)) / 3);
    }
    .sectionItem:not(#mainTools .sectionItem){
        --sectionItemPadding: var(--halfUnit);
    }
    .sectionItem .contentWrapper{
        font-size: 1.1rem;
    }
    .sectionItem.image.odds{
        display: none;
    }
    .sectionItem.image.evens{
        display: flex;
    }
}